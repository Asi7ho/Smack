{"version":3,"sources":["../../src/controller/message.js"],"names":["config","db","api","post","req","res","newMessage","messageBody","body","userId","channelId","userName","userAvatar","userAvatarColor","save","err","status","json","message","put","findById","params","id","get","find","messages","delete","remove","_id","users"],"mappings":"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","file":"message.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport Message from '../model/message';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/message/add' - Create\n  api.post('/add', authenticate, (req, res) => {\n    let newMessage = new Message();\n    newMessage.messageBody = req.body.messageBody;\n    newMessage.userId = req.body.userId;\n    newMessage.channelId = req.body.channelId;\n    newMessage.userName = req.body.userName;\n    newMessage.userAvatar = req.body.userAvatar;\n    newMessage.userAvatarColor = req.body.userAvatarColor;\n\n    newMessage.save(err => {\n      if (err) {\n        res.status(500).json({ message: err });\n      }\n      res.status(200).json({ message: 'Message saved successfully' })\n    });\n  });\n\n  // '/v1/message/:id' - Update\n  api.put('/:id', authenticate, (req, res) => {\n    Message.findById(req.params.id, (err, message) => {\n      if (err) {\n        res.status(500).json({ message: err });\n      }\n      message.messageBody = req.body.messageBody;\n      message.userId = req.body.userId;\n      message.channelId = req.body.channelId;\n      newMessage.userName = req.body.userName;\n      newMessage.userAvatar = req.body.userAvatar;\n      newMessage.userAvatarColor = req.body.userAvatarColor;\n\n      message.save(err => {\n        if (err) {\n          res.status(500).json({ message: err });\n        }\n        res.status(200).json({ message: 'Message updated' });\n      });\n    });\n  });\n\n  // '/v1/message/byChannel/:channelId'\n  api.get('/byChannel/:channelId', authenticate, (req, res) => {\n    Message\n      .find({ 'channelId' : req.params.channelId }, (err, messages) => {\n        if(err) {\n          res.status(500).json({ message: err });\n        }\n        res.status(200).json(messages);\n      });\n  });\n\n  // '/vq/message/:id' -Delete\n  api.delete('/:id', authenticate, (req, res) => {\n    Message.remove({\n      _id: req.params.id\n    }, (err, message) => {\n      if (err) {\n        res.status(500).json({ message: err });\n      }\n      res.status(200).json({ message: 'Message Successfully Removed'});\n    });\n  });\n\n  // '/v1/message/' - Delete all\n  api.delete('/', authenticate, (req, res) => {\n    Message.find({}, (err, users) => {\n      if (err) {\n        res.status(500).json({ message: err });\n      }\n      res.status(200).json({ message: 'Users All Removed'});\n    });\n  });\n\n  return api;\n}\n"]}
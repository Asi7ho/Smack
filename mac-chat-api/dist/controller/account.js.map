{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","findUserByEmail","body","email","err","userData","status","json","message","register","username","password","account","authenticate","session","send","next","scope","failWithError","get","logout","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CAAS,WAAT,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,0BAAYC,eAAZ,CAA4BF,IAAIG,IAAJ,CAASC,KAArC,EAA4C,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC7D,UAAID,GAAJ,EAAS;AACPJ,YAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,gCAA8BJ,IAAII,OAApC,EAArB;AACD,OAFD,MAEO,IAAIH,QAAJ,EAAc;AACnBL,YAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,oBAAkBT,IAAIG,IAAJ,CAASC,KAA3B,2BAAF,EAArB;AACD;AACD;AACE,wBAAQM,QAAR,CAAiB,sBAAY,EAAEC,UAAUX,IAAIG,IAAJ,CAASC,KAArB,EAAZ,CAAjB,EAA4DJ,IAAIG,IAAJ,CAASS,QAArE,EAA+E,UAASP,GAAT,EAAcQ,OAAd,EAAuB;AACpG,YAAGR,GAAH,EAAQ;AACNJ,cAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASJ,GAAX,EAArB;AACD;AACD,2BAASS,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,SAAS,KAAX,EAA/B,EAAmDf,GAAnD,EAAwDC,GAAxD,EAA6D,YAAM;AAC/DA,cAAIM,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqB,kCAArB;AACH,SAFD;AAGD,OAPD;AAQF;AACD,KAhBD;AAiBD,GAlBD;;AAoBA;AACAlB,MAAIC,IAAJ,CAAS,QAAT,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAWgB,IAAX,EAAoB;AACvC,0BAAYf,eAAZ,CAA4BF,IAAIG,IAAJ,CAASC,KAArC,EAA4C,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC3D,UAAID,GAAJ,EAAS;AACPJ,YAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,gCAA8BJ,IAAII,OAApC,EAArB;AACD,OAFD,MAEO;AACTQ;AACA;AACC,KANH;AAOA,GARA,EAQE,mBAASH,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,SAAS,KAAX,EAAkBG,OAAO,EAAzB,EAA6BC,eAAe,IAA5C,EAA/B,CARF,EAQsF,UAACd,GAAD,EAAML,GAAN,EAAWC,GAAX,EAAgBgB,IAAhB,EAAyB;AAC/G,QAAIZ,GAAJ,EAAS;AACRJ,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,mEAAF,EAArB;AACA;AACD,GAZA;;AAcA;AACAX,MAAIsB,GAAJ,CAAQ,SAAR,gCAAiC,UAACpB,GAAD,EAAMC,GAAN,EAAc;AAC7CA,QAAIoB,MAAJ;AACApB,QAAIM,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqB,yBAArB;AACD,GAHD;;AAKAlB,MAAIsB,GAAJ,CAAQ,KAAR,gCAA6B,UAACpB,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,IAAIsB,IAAzB;AACD,GAFD;;AAIA,SAAOxB,GAAP;AACD,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\nimport Account from '../model/account';\nimport UserDataExt from './extensions/userData-ext';\n\nimport { generateAccessToken, respond, authenticate } from '../middleware/authMiddleware';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // '/v1/account/register'\n  api.post('/register', (req, res) => {\n    UserDataExt.findUserByEmail(req.body.email, (err, userData) => {\n      if (err) {\n        res.status(409).json({ message: `An error occured: ${err.message}`});\n      } else if (userData) {\n        res.status(300).json({ message: `Email ${req.body.email} is already registered`});\n      }\n      // else {\n        Account.register(new Account({ username: req.body.email }), req.body.password, function(err, account) {\n          if(err) {\n            res.status(500).json({ message: err });\n          }\n          passport.authenticate('local', { session: false })(req, res, () => {\n              res.status(200).send('Successfully created new account');\n          });\n        });\n      // }\n    });\n  });\n\n  // '/v1/account/login'\n  api.post('/login', (req, res, next) => {\n\t\tUserDataExt.findUserByEmail(req.body.email, (err, userData) => {\n      if (err) {\n        res.status(409).json({ message: `An error occured: ${err.message}`});\n      } else {\n\t\t\t\tnext();\n\t\t\t}\n    });\n\t}, passport.authenticate('local', { session: false, scope: [], failWithError: true }), (err, req, res, next) => {\n\t\tif (err) {\n\t\t\tres.status(401).json({ message: `Email or password invalid, please check your credentials`});\n\t\t}\n\t}, generateAccessToken, respond);\n\n  // '/v1/account/logout'\n  api.get('/logout', authenticate, (req, res) => {\n    res.logout();\n    res.status(200).send('Successfully logged out');\n  });\n\n  api.get('/me', authenticate, (req, res) => {\n    res.status(200).json(req.user);\n  });\n\n  return api;\n}\n"]}